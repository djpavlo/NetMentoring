„
o/Users/pavel/project/NetMentoring/CatalogService.Domain/IntegrationEvent/ProductPriceChangedIntegrationEvent.cs
	namespace 	
CatalogService
 
. 
Domain 
.  
IntegrationEvent  0
;0 1
public 
class /
#ProductPriceChangedIntegrationEvent 0
{ 
public 

int 
	ProductId 
{ 
get 
; 
private  '
init( ,
;, -
}. /
public 

decimal 
NewPrice 
{ 
get !
;! "
private# *
init+ /
;/ 0
}1 2
public 

decimal 
OldPrice 
{ 
get !
;! "
private# *
init+ /
;/ 0
}1 2
public 
/
#ProductPriceChangedIntegrationEvent .
(. /
int/ 2
	productId3 <
,< =
decimal> E
newPriceF N
,N O
decimalP W
oldPriceX `
)` a
{ 
	ProductId 
= 
	productId 
; 
NewPrice   
=   
newPrice   
;   
OldPrice!! 
=!! 
oldPrice!! 
;!! 
}"" 
}## ç
Y/Users/pavel/project/NetMentoring/CatalogService.Domain/Interfaces/ICategoryRepository.cs
	namespace 	
CatalogService
 
. 
Domain 
.  

Interfaces  *
;* +
public 
	interface 
ICategoryRepository $
{ 
Task 
AddCategoryAsync 
( 
Category  
category! )
)) *
;* +
Task 
DeleteCategoryAsync 
( 
int 
id !
)! "
;" #
Task		 
<		 
List		 
<		 
Category		 
>		 
>		 
GetCategoriesAsync		 )
(		) *
)		* +
;		+ ,
Task

 
<

 
Category

 
?

 
>

  
GetCategoryByIdAsync

 &
(

& '
int

' *
id

+ -
)

- .
;

. /
Task 
UpdateCategoryAsync 
( 
Category #
category$ ,
), -
;- .
} Á
V/Users/pavel/project/NetMentoring/CatalogService.Domain/Interfaces/ICategoryService.cs
	namespace 	
CatalogService
 
. 
Domain 
.  

Interfaces  *
;* +
public 
	interface 
ICategoryService !
{ 
Task 
< 
IEnumerable 
< 
Category 
> 
> 
GetAllAsync )
() *
)* +
;+ ,
Task 
< 
Category 
? 
> 
GetByIdAsync 
( 
int "
id# %
)% &
;& '
Task 
AddAsync 
( 
Category 
category !
)! "
;" #
Task		 
UpdateAsync		 
(		 
Category		 
category		 $
)		$ %
;		% &
Task

 
DeleteAsync

 
(

 
int

 
id

 
)

 
;

 
} …

[/Users/pavel/project/NetMentoring/CatalogService.Domain/Interfaces/IIProductemRepository.cs
	namespace 	
CatalogService
 
. 
Domain 
.  

Interfaces  *
;* +
public 
	interface "
IProductItemRepository '
{ 
Task 
AddItemAsync 
( 
ProductItem 
item  $
)$ %
;% &
Task 
DeleteItemAsync 
( 
int 
id 
) 
; 
Task		 
<		 
ProductItem		 
?		 
>		 
GetItemByIdAsync		 %
(		% &
int		& )
id		* ,
)		, -
;		- .
Task

 
<

 
List

 
<

 
ProductItem

 
>

 
>

 
GetItemsAsync

 '
(

' (
int

( +
?

+ ,
page

- 1
=

2 3
null

4 8
,

8 9
int& )
pageSize* 2
=3 4
$num5 7
)7 8
;8 9
Task 
UpdateItemAsync 
( 
ProductItem "
item# '
)' (
;( )
} õ	
Y/Users/pavel/project/NetMentoring/CatalogService.Domain/Interfaces/IProductItemService.cs
	namespace 	
CatalogService
 
. 
Domain 
.  

Interfaces  *
;* +
public 
	interface 
IProductItemService $
{ 
Task 
< 
IEnumerable 
< 
ProductItem 
> 
>  
GetAllAsync! ,
(, -
int- 0
?0 1
page2 6
=7 8
null9 =
,= >
int? B
pageSizeC K
=L M
$numN P
)P Q
;Q R
Task 
< 
ProductItem 
? 
> 
GetByIdAsync !
(! "
int" %
id& (
)( )
;) *
Task		 
AddAsync		 
(		 
ProductItem		 
item		  
)		  !
;		! "
Task

 
UpdateAsync

 
(

 
ProductItem

 
item

 #
)

# $
;

$ %
Task 
DeleteAsync 
( 
int 
id 
) 
; 
} õ
J/Users/pavel/project/NetMentoring/CatalogService.Domain/Models/Category.cs
	namespace 	
CatalogService
 
. 
Domain 
.  
Models  &
;& '
public 
class 
Category 
{ 
public 
int	 
Id 
{ 
get 
; 
set 
; 
} 
public 
string	 
? 
Name 
{ 
get 
; 
set  
;  !
}" #
public 
string	 
? 
ImageUrl 
{ 
get 
;  
set! $
;$ %
}& '
public 
Category	 
? 
ParentCategory !
{" #
get$ '
;' (
set) ,
;, -
}. /
public

 
void

	 
Validate

 
(

 
)

 
{ 
if 
( 
string 
. 
IsNullOrWhiteSpace !
(! "
Name" &
)& '
)' (
throw 
new 
ArgumentException !
(! "
$str" =
)= >
;> ?
if 
( 
Name 
. 
Length 
> 
$num 
) 
throw 
new 
ArgumentException !
(! "
$str" U
)U V
;V W
if 
( 
! 	
string	 
. 
IsNullOrWhiteSpace "
(" #
ImageUrl# +
)+ ,
&&- /
!0 1
Uri1 4
.4 5!
IsWellFormedUriString5 J
(J K
ImageUrlK S
,S T
UriKindU \
.\ ]
Absolute] e
)e f
)f g
throw 
new 
ArgumentException !
(! "
$str" :
): ;
;; <
} 
} ¥
M/Users/pavel/project/NetMentoring/CatalogService.Domain/Models/ProductItem.cs
	namespace 	
CatalogService
 
. 
Domain 
.  
Models  &
;& '
public 
class 
ProductItem 
{ 
public 
int	 
Id 
{ 
get 
; 
set 
; 
} 
public 
string	 
? 
Name 
{ 
get 
; 
set  
;  !
}" #
public 
string	 
? 
Description 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string	 
? 
ImageUrl 
{ 
get 
;  
set! $
;$ %
}& '
public		 
Category			 
?		 
Category		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
decimal

	 
?

 
Price

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
public 
int	 
? 
Amount 
{ 
get 
; 
set 
;  
}! "
public 
void	 
Validate 
( 
) 
{ 
if 
( 
string 
. 
IsNullOrWhiteSpace !
(! "
Name" &
)& '
)' (
throw 
new 
ArgumentException !
(! "
$str" <
)< =
;= >
if 
( 
Name 
. 
Length 
> 
$num 
) 
throw 
new 
ArgumentException !
(! "
$str" T
)T U
;U V
if 
( 
! 	
string	 
. 
IsNullOrWhiteSpace "
(" #
ImageUrl# +
)+ ,
&&- /
!0 1
Uri1 4
.4 5!
IsWellFormedUriString5 J
(J K
ImageUrlK S
,S T
UriKindU \
.\ ]
Absolute] e
)e f
)f g
throw 
new 
ArgumentException !
(! "
$str" :
): ;
;; <
if 
( 
Category 
== 
null 
) 
throw 
new 
ArgumentException !
(! "
$str" 8
)8 9
;9 :
if 
( 
Price 
== 
null 
) 
throw 
new 
ArgumentException !
(! "
$str" 5
)5 6
;6 7
if 
( 
Amount 
== 
null 
) 
throw 
new 
ArgumentException !
(! "
$str" 6
)6 7
;7 8
}   
}!! É
S/Users/pavel/project/NetMentoring/CatalogService.Domain/Services/CategoryService.cs
	namespace 	
CatalogService
 
. 
Domain 
.  
Services  (
;( )
public 
class 
CategoryService 
: 
ICategoryService /
{ 
private 	
readonly
 
ICategoryRepository &
_repository' 2
;2 3
public		 
CategoryService			 
(		 
ICategoryRepository		 ,

repository		- 7
)		7 8
{

 
_repository 
= 

repository 
; 
} 
public 
async	 
Task 
< 
IEnumerable 
<  
Category  (
>( )
>) *
GetAllAsync+ 6
(6 7
)7 8
{ 
return 

await 
_repository 
. 
GetCategoriesAsync /
(/ 0
)0 1
;1 2
} 
public 
async	 
Task 
< 
Category 
? 
> 
GetByIdAsync +
(+ ,
int, /
id0 2
)2 3
{ 
return 

await 
_repository 
.  
GetCategoryByIdAsync 1
(1 2
id2 4
)4 5
;5 6
} 
public 
async	 
Task 
AddAsync 
( 
Category %
category& .
). /
{ 
category 
. 
Validate 
( 
) 
; 
await 	
_repository
 
. 
AddCategoryAsync &
(& '
category' /
)/ 0
;0 1
} 
public 
async	 
Task 
UpdateAsync 
(  
Category  (
category) 1
)1 2
{ 
category   
.   
Validate   
(   
)   
;   
await!! 	
_repository!!
 
.!! 
UpdateCategoryAsync!! )
(!!) *
category!!* 2
)!!2 3
;!!3 4
}"" 
public$$ 
async$$	 
Task$$ 
DeleteAsync$$ 
($$  
int$$  #
id$$$ &
)$$& '
{%% 
await&& 	
_repository&&
 
.&& 
DeleteCategoryAsync&& )
(&&) *
id&&* ,
)&&, -
;&&- .
}'' 
}(( ú&
V/Users/pavel/project/NetMentoring/CatalogService.Domain/Services/ProductItemService.cs
	namespace 	
CatalogService
 
. 
Domain 
.  
Services  (
;( )
public		 
class		 
ProductItemService		 
:		  !
IProductItemService		" 5
{

 
private 
readonly "
IProductItemRepository +
_repository, 7
;7 8
private 
readonly 
IEventBusRabbitMq &

_publisher' 1
;1 2
public 

ProductItemService 
( "
IProductItemRepository 4

repository5 ?
,? @
IEventBusRabbitMqA R
	publisherS \
)\ ]
{ 
_repository 
= 

repository  
;  !

_publisher 
= 
	publisher 
; 
} 
public 

async 
Task 
< 
IEnumerable !
<! "
ProductItem" -
>- .
>. /
GetAllAsync0 ;
(; <
int< ?
?? @
pageA E
=F G
nullH L
,L M
intN Q
pageSizeR Z
=[ \
$num] _
)_ `
{ 
return 
await 
_repository  
.  !
GetItemsAsync! .
(. /
page/ 3
,3 4
pageSize5 =
)= >
;> ?
} 
public 

async 
Task 
< 
ProductItem !
?! "
>" #
GetByIdAsync$ 0
(0 1
int1 4
id5 7
)7 8
{ 
return 
await 
_repository  
.  !
GetItemByIdAsync! 1
(1 2
id2 4
)4 5
;5 6
} 
public 

async 
Task 
AddAsync 
( 
ProductItem *
item+ /
)/ 0
{   
item!! 
.!! 
Validate!! 
(!! 
)!! 
;!! 
await"" 
_repository"" 
."" 
AddItemAsync"" &
(""& '
item""' +
)""+ ,
;"", -
}## 
public%% 

async%% 
Task%% 
UpdateAsync%% !
(%%! "
ProductItem%%" -
item%%. 2
)%%2 3
{&& 
item'' 
.'' 
Validate'' 
('' 
)'' 
;'' 
var(( 
oldItem(( 
=(( 
await(( 
_repository(( '
.((' (
GetItemByIdAsync((( 8
(((8 9
item((9 =
.((= >
Id((> @
)((@ A
;((A B
if** 

(** 
oldItem** 
==** 
null** 
)** 
{++ 	
throw,, 
new,, 
	Exception,, 
(,,  
$",,  "
$str,," /
{,,/ 0
item,,0 4
.,,4 5
Id,,5 7
},,7 8
$str,,8 B
",,B C
),,C D
;,,D E
}-- 	
await// 
_repository// 
.// 
UpdateItemAsync// )
(//) *
item//* .
)//. /
;/// 0
if11 

(11 
oldItem11 
.11 
Price11 
!=11 
null11 !
&&11" $
item11% )
.11) *
Price11* /
!=110 2
null113 7
&&118 :
oldItem11; B
.11B C
Price11C H
!=11I K
item11L P
.11P Q
Price11Q V
)11V W
{22 	
var44 
	eventItem44 
=44 
new44 /
#ProductPriceChangedIntegrationEvent44  C
(44C D
item44D H
.44H I
Id44I K
,44K L
item44M Q
.44Q R
Price44R W
??44X Z
$num44[ \
,44\ ]
oldItem44^ e
.44e f
Price44f k
??44l n
$num44o p
)44p q
;44q r
var55 
message55 
=55 
JsonSerializer55 (
.55( )
	Serialize55) 2
(552 3
	eventItem553 <
)55< =
;55= >

_publisher66 
.66 
Publish66 
(66 
message66 &
)66& '
;66' (
}77 	
}88 
public:: 

async:: 
Task:: 
DeleteAsync:: !
(::! "
int::" %
id::& (
)::( )
{;; 
await<< 
_repository<< 
.<< 
DeleteItemAsync<< )
(<<) *
id<<* ,
)<<, -
;<<- .
}== 
}>> 