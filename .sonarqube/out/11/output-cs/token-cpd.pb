√
M/Users/pavel/project/NetMentoring/CatalogWebApi/AuthHelper/HasScopeHandler.cs
	namespace 	
CatalogWebApi
 
. 

AuthHelper "
;" #
public 
class 
HasScopeHandler 
:  
AuthorizationHandler 3
<3 4
HasScopeRequirement4 G
>G H
{		 
	protected 
override 
Task "
HandleRequirementAsync 2
(2 3'
AuthorizationHandlerContext3 N
contextO V
,V W
HasScopeRequirementX k
requirementl w
)w x
{ 
if 

( 
! 
context 
. 
User 
. 
HasClaim "
(" #
c# $
=>% '
c( )
.) *
Type* .
==/ 1
$str2 9
&&: <
c= >
.> ?
Issuer? E
==F H
requirementI T
.T U
IssuerU [
)[ \
)\ ]
return 
Task 
. 
CompletedTask %
;% &
var 
scopes 
= 
context 
. 
User !
.! "
	FindFirst" +
(+ ,
c, -
=>. 0
c1 2
.2 3
Type3 7
==8 :
$str; B
&&C E
cF G
.G H
IssuerH N
==O Q
requirementR ]
.] ^
Issuer^ d
)d e
.e f
Valuef k
.k l
Splitl q
(q r
$charr u
)u v
;v w
if 

( 
scopes 
. 
Any 
( 
s 
=> 
s 
==  
requirement! ,
., -
Scope- 2
)2 3
)3 4
context 
. 
Succeed 
( 
requirement '
)' (
;( )
return 
Task 
. 
CompletedTask !
;! "
} 
} ê

Q/Users/pavel/project/NetMentoring/CatalogWebApi/AuthHelper/HasScopeRequirement.cs
	namespace 	
CatalogWebApi
 
. 

AuthHelper "
;" #
public 
class 
HasScopeRequirement  
:! "%
IAuthorizationRequirement# <
{		 
public 

string 
Issuer 
{ 
get 
; 
}  !
public 

string 
Scope 
{ 
get 
; 
}  
public 

HasScopeRequirement 
( 
string %
scope& +
,+ ,
string- 3
issuer4 :
): ;
{ 
Scope 
= 
scope 
?? 
throw 
new "!
ArgumentNullException# 8
(8 9
nameof9 ?
(? @
scope@ E
)E F
)F G
;G H
Issuer 
= 
issuer 
?? 
throw  
new! $!
ArgumentNullException% :
(: ;
nameof; A
(A B
issuerB H
)H I
)I J
;J K
} 
} ì
K/Users/pavel/project/NetMentoring/CatalogWebApi/Configurators/AuthConfig.cs
	namespace 	
CatalogWebApi
 
. 
Configurators %
;% &
public 
static 
class 

AuthConfig 
{ 
public 

static 
Action 
< 
JwtBearerOptions )
>) *
ConfigureJwtBearer+ =
(= >!
WebApplicationBuilder> S
builderT [
)[ \
{ 
return 
options 
=> 
{ 	
options 
. 
	Authority 
= 
$"  "
$str" *
{* +
builder+ 2
.2 3
Configuration3 @
[@ A
$strA O
]O P
}P Q
$strQ R
"R S
;S T
options 
. 
Audience 
= 
builder &
.& '
Configuration' 4
[4 5
$str5 E
]E F
;F G
options 
. %
TokenValidationParameters -
=. /
new0 3%
TokenValidationParameters4 M
{ 
NameClaimType 
= 

ClaimTypes  *
.* +
NameIdentifier+ 9
} 
; 
} 	
;	 

} 
public%% 

static%% 
Action%% 
<%%  
AuthorizationOptions%% -
>%%- ."
ConfigureAuthorization%%/ E
(%%E F!
WebApplicationBuilder%%F [
builder%%\ c
)%%c d
{&& 
return'' 
options'' 
=>'' 
{(( 	
var)) 
scopes)) 
=)) 
new)) 
[)) 
])) 
{))  
$str))! 0
,))0 1
$str))2 C
,))C D
$str))E V
,))V W
$str))X i
}))j k
;))k l
foreach++ 
(++ 
var++ 
scope++ 
in++ !
scopes++" (
)++( )
{,, 
var-- 
requirement-- 
=--  !
new--" %
HasScopeRequirement--& 9
(--9 :
scope--: ?
,--? @
$"--A C
$str--C K
{--K L
builder--L S
.--S T
Configuration--T a
[--a b
$str--b p
]--p q
}--q r
$str--r s
"--s t
)--t u
;--u v
options.. 
... 
	AddPolicy.. !
(..! "
scope.." '
,..' (
policy..) /
=>..0 2
policy..3 9
...9 :
Requirements..: F
...F G
Add..G J
(..J K
requirement..K V
)..V W
)..W X
;..X Y
}// 
}11 	
;11	 

}33 
}44 ˚/
X/Users/pavel/project/NetMentoring/CatalogWebApi/Configurators/ConfigureSwaggerOptions.cs
	namespace 	
CatalogWebApi
 
. 
Configurators %
;% &
public 
class #
ConfigureSwaggerOptions $
:% &
IConfigureOptions' 8
<8 9
SwaggerGenOptions9 J
>J K
{ 
private 
readonly *
IApiVersionDescriptionProvider 3
	_provider4 =
;= >
public 
#
ConfigureSwaggerOptions "
(" #*
IApiVersionDescriptionProvider# A
providerB J
)J K
=>L N
	_providerO X
=Y Z
provider[ c
;c d
public 

void 
	Configure 
( 
SwaggerGenOptions +
options, 3
)3 4
{ 
foreach 
( 
var 
description  
in! #
	_provider$ -
.- ."
ApiVersionDescriptions. D
)D E
{ 	
options   
.   

SwaggerDoc   
(   
description   *
.  * +
	GroupName  + 4
,  4 5#
CreateInfoForApiVersion  6 M
(  M N
description  N Y
)  Y Z
)  Z [
;  [ \
}!! 	
}"" 
private$$ 
static$$ 
OpenApiInfo$$ #
CreateInfoForApiVersion$$ 6
($$6 7!
ApiVersionDescription$$7 L
description$$M X
)$$X Y
{%% 
var&& 
text&& 
=&& 
new&& 
StringBuilder&& $
(&&$ %
$str&&% l
)&&l m
;&&m n
var'' 
info'' 
='' 
new'' 
OpenApiInfo'' "
(''" #
)''# $
{(( 	
Title)) 
=)) 
$str)) &
,))& '
Version** 
=** 
description** !
.**! "

ApiVersion**" ,
.**, -
ToString**- 5
(**5 6
)**6 7
,**7 8
Contact++ 
=++ 
new++ 
OpenApiContact++ (
(++( )
)++) *
{+++ ,
Name++- 1
=++2 3
$str++4 E
,++E F
Email++G L
=++M N
$str++O ^
}++_ `
,++` a
License,, 
=,, 
new,, 
OpenApiLicense,, (
(,,( )
),,) *
{,,+ ,
Name,,- 1
=,,2 3
$str,,4 9
,,,9 :
Url,,; >
=,,? @
new,,A D
Uri,,E H
(,,H I
$str,,I n
),,n o
},,p q
}-- 	
;--	 

if// 

(// 
description// 
.// 
IsDeprecated// $
)//$ %
{00 	
text11 
.11 
Append11 
(11 
$str11 @
)11@ A
;11A B
}22 	
AppendSunsetPolicy44 
(44 
text44 
,44  
description44! ,
.44, -
SunsetPolicy44- 9
)449 :
;44: ;
info66 
.66 
Description66 
=66 
text66 
.66  
ToString66  (
(66( )
)66) *
;66* +
return88 
info88 
;88 
}99 
private;; 
static;; 
void;; 
AppendSunsetPolicy;; *
(;;* +
StringBuilder;;+ 8
text;;9 =
,;;= >
SunsetPolicy;;? K
sunsetPolicy;;L X
);;X Y
{<< 
if== 

(== 
sunsetPolicy== 
is== 
null==  
)==  !
{>> 	
return?? 
;?? 
}@@ 	
ifBB 

(BB 
sunsetPolicyBB 
.BB 
DateBB 
isBB  
{BB! "
}BB# $
whenBB% )
)BB) *
{CC 	
textDD 
.DD 
AppendDD 
(DD 
$strDD 5
)DD5 6
.EE 
AppendEE 
(EE 
whenEE 
.EE 
DateEE !
.EE! "
ToShortDateStringEE" 3
(EE3 4
)EE4 5
)EE5 6
.FF 
AppendFF 
(FF 
$charFF 
)FF 
;FF 
}GG 	
ifII 

(II 
sunsetPolicyII 
.II 
HasLinksII !
)II! "
{JJ 	
textKK 
.KK 

AppendLineKK 
(KK 
)KK 
;KK 
forMM 
(MM 
varMM 
iMM 
=MM 
$numMM 
;MM 
iMM 
<MM 
sunsetPolicyMM  ,
.MM, -
LinksMM- 2
.MM2 3
CountMM3 8
;MM8 9
iMM: ;
++MM; =
)MM= >
{NN 
varOO 
linkOO 
=OO 
sunsetPolicyOO '
.OO' (
LinksOO( -
[OO- .
iOO. /
]OO/ 0
;OO0 1
ifQQ 
(QQ 
linkQQ 
.QQ 
TypeQQ 
==QQ  
$strQQ! ,
)QQ, -
{RR 
textSS 
.SS 

AppendLineSS #
(SS# $
)SS$ %
;SS% &
ifUU 
(UU 
linkUU 
.UU 
TitleUU "
.UU" #
HasValueUU# +
)UU+ ,
{VV 
textWW 
.WW 
AppendWW #
(WW# $
linkWW$ (
.WW( )
TitleWW) .
.WW. /
ValueWW/ 4
)WW4 5
.WW5 6
AppendWW6 <
(WW< =
$strWW= A
)WWA B
;WWB C
}XX 
textZZ 
.ZZ 
AppendZZ 
(ZZ  
linkZZ  $
.ZZ$ %

LinkTargetZZ% /
.ZZ/ 0
OriginalStringZZ0 >
)ZZ> ?
;ZZ? @
}[[ 
}\\ 
}]] 	
}^^ 
}__ ü
O/Users/pavel/project/NetMentoring/CatalogWebApi/Configurators/EventBusConfig.cs
	namespace 	
CatalogWebApi
 
. 
Configurators %
;% &
public 
static 
class 
EventBusConfig "
{		 
public 

static 
IEventBusRabbitMq #%
ConfigureEventBusRabbitMq$ =
(= >!
WebApplicationBuilder> S
builderT [
)[ \
{ 
var 
rabbitMqHost 
= 
builder "
." #
Configuration# 0
.0 1

GetSection1 ;
(; <
$str< J
)J K
.K L
ValueL Q
;Q R
var 
rabbitMqPort 
= 
int 
. 
Parse $
($ %
builder% ,
., -
Configuration- :
.: ;

GetSection; E
(E F
$strF T
)T U
.U V
ValueV [
??\ ^
$str_ e
)e f
;f g
var 
rabbitMqUser 
= 
builder "
." #
Configuration# 0
.0 1

GetSection1 ;
(; <
$str< J
)J K
.K L
ValueL Q
;Q R
var 
rabbitMqPassword 
= 
builder &
.& '
Configuration' 4
.4 5

GetSection5 ?
(? @
$str@ R
)R S
.S T
ValueT Y
;Y Z
var 
rabbitMqQueue 
= 
builder #
.# $
Configuration$ 1
.1 2

GetSection2 <
(< =
$str= L
)L M
.M N
ValueN S
;S T
return 
new 
EventBusRabbitMq #
(# $
rabbitMqQueue 
?? 
throw "
new# &%
InvalidOperationException' @
(@ A
)A B
,B C
rabbitMqHost 
?? 
throw !
new" %%
InvalidOperationException& ?
(? @
)@ A
,A B
rabbitMqPort 
, 
rabbitMqUser 
?? 
throw !
new" %%
InvalidOperationException& ?
(? @
)@ A
,A B
rabbitMqPassword 
?? 
throw  %
new& )%
InvalidOperationException* C
(C D
)D E
)E F
;F G
} 
}   Î+
N/Users/pavel/project/NetMentoring/CatalogWebApi/Configurators/SwaggerConfig.cs
	namespace 	
CatalogWebApi
 
. 
Configurators %
;% &
public 
static 
class 
SwaggerConfig !
{ 
public 

static 
void "
SetupSwaggerGenOptions -
(- .
SwaggerGenOptions. ?
options@ G
)G H
{ 
options 
. 
OperationFilter 
<   
SwaggerDefaultValues  4
>4 5
(5 6
)6 7
;7 8
options 
. !
AddSecurityDefinition %
(% &
$str& .
,. /
new0 3!
OpenApiSecurityScheme4 I
{ 	
Description 
= 
$str <
,< =
Name 
= 
$str "
," #
In 
= 
ParameterLocation "
." #
Header# )
,) *
Type 
= 
SecuritySchemeType %
.% &
ApiKey& ,
,, -
Scheme   
=   
$str   
}!! 	
)!!	 

;!!
 
options"" 
."" "
AddSecurityRequirement"" &
(""& '
new""' *&
OpenApiSecurityRequirement""+ E
(""E F
)""F G
{## 	
{$$ 
new%% !
OpenApiSecurityScheme%% )
{&& 
	Reference'' 
='' 
new''  #
OpenApiReference''$ 4
{(( 
Type)) 
=)) 
ReferenceType)) ,
.)), -
SecurityScheme))- ;
,)); <
Id** 
=** 
$str** %
}++ 
,++ 
Scheme,, 
=,, 
$str,, %
,,,% &
Name-- 
=-- 
$str-- #
,--# $
In.. 
=.. 
ParameterLocation.. *
...* +
Header..+ 1
,..1 2
}00 
,00 
new11 
List11 
<11 
string11 
>11  
(11  !
)11! "
}22 
}33 	
)33	 

;33
 
var55 
fileName55 
=55 
typeof55 
(55 
Program55 %
)55% &
.55& '
Assembly55' /
.55/ 0
GetName550 7
(557 8
)558 9
.559 :
Name55: >
+55? @
$str55A G
;55G H
var66 
filePath66 
=66 
Path66 
.66 
Combine66 #
(66# $

AppContext66$ .
.66. /
BaseDirectory66/ <
,66< =
fileName66> F
)66F G
;66G H
options99 
.99 
IncludeXmlComments99 "
(99" #
filePath99# +
)99+ ,
;99, -
}:: 
public@@ 

static@@ 
void@@ #
SetupApiExplorerOptions@@ .
(@@. /
ApiExplorerOptions@@/ A
options@@B I
)@@I J
{AA 
optionsDD 
.DD 
GroupNameFormatDD 
=DD  !
$strDD" *
;DD* +
optionsHH 
.HH %
SubstituteApiVersionInUrlHH )
=HH* +
trueHH, 0
;HH0 1
}II 
publicOO 

staticOO 
voidOO %
SetupApiVersioningOptionsOO 0
(OO0 1 
ApiVersioningOptionsOO1 E
optionsOOF M
)OOM N
{PP 
optionsSS 
.SS 
ReportApiVersionsSS !
=SS" #
trueSS$ (
;SS( )
optionsUU 
.UU 
PoliciesUU 
.UU 
SunsetUU 
(UU  
$numUU  #
)UU# $
.VV 
	EffectiveVV 
(VV 
DateTimeOffsetVV %
.VV% &
NowVV& )
.VV) *
AddDaysVV* 1
(VV1 2
$numVV2 4
)VV4 5
)VV5 6
.WW 
LinkWW 
(WW 
$strWW 
)WW  
.XX 
TitleXX 
(XX 
$strXX &
)XX& '
.YY 
TypeYY 
(YY 
$strYY 
)YY 
;YY 
}ZZ 
publicaa 

staticaa 
voidaa !
SetupSwaggerUiOptionsaa ,
(aa, -
SwaggerUIOptionsaa- =
optionsaa> E
,aaE F
WebApplicationaaG U
appaaV Y
)aaY Z
{bb 
varcc 
descriptionscc 
=cc 
appcc 
.cc 
DescribeApiVersionscc 2
(cc2 3
)cc3 4
;cc4 5
foreachff 
(ff 
varff 
descriptionff  
inff! #
descriptionsff$ 0
)ff0 1
{gg 	
varhh 
urlhh 
=hh 
$"hh 
$strhh !
{hh! "
descriptionhh" -
.hh- .
	GroupNamehh. 7
}hh7 8
$strhh8 E
"hhE F
;hhF G
varii 
nameii 
=ii 
descriptionii "
.ii" #
	GroupNameii# ,
.ii, -
ToUpperInvariantii- =
(ii= >
)ii> ?
;ii? @
optionsjj 
.jj 
SwaggerEndpointjj #
(jj# $
urljj$ '
,jj' (
namejj) -
)jj- .
;jj. /
}kk 	
}ll 
}mm „$
U/Users/pavel/project/NetMentoring/CatalogWebApi/Configurators/SwaggerDefaultValues.cs
	namespace 	
CatalogWebApi
 
. 
Configurators %
;% &
public 
class  
SwaggerDefaultValues !
:" #
IOperationFilter$ 4
{ 
public 
void	 
Apply 
( 
OpenApiOperation $
	operation% .
,. /"
OperationFilterContext0 F
contextG N
)N O
{ 
var 
apiDescription 
= 
context  
.  !
ApiDescription! /
;/ 0
	operation 
. 

Deprecated 
|= 
apiDescription *
.* +
IsDeprecated+ 7
(7 8
)8 9
;9 :
foreach 
( 
var 
responseType 
in  
context! (
.( )
ApiDescription) 7
.7 8"
SupportedResponseTypes8 N
)N O
{ 
var 	
responseKey
 
= 
responseType $
.$ %
IsDefaultResponse% 6
?7 8
$str9 B
:C D
responseTypeE Q
.Q R

StatusCodeR \
.\ ]
ToString] e
(e f
)f g
;g h
var 	
response
 
= 
	operation 
. 
	Responses (
[( )
responseKey) 4
]4 5
;5 6
foreach 
( 
var 
contentType 
in !
response" *
.* +
Content+ 2
.2 3
Keys3 7
)7 8
{ 
if 

( 
responseType 
. 
ApiResponseFormats +
.+ ,
All, /
(/ 0
x0 1
=>2 4
x5 6
.6 7
	MediaType7 @
!=A C
contentTypeD O
)O P
)P Q
{   	
response!!
 
.!! 
Content!! 
.!! 
Remove!! !
(!!! "
contentType!!" -
)!!- .
;!!. /
}"" 	
}## 
}$$ 
if&& 
(&& 
	operation&& 
.&& 

Parameters&& 
==&& 
null&&  $
)&&$ %
{'' 
return(( 
;(( 
})) 
foreach-- 
(-- 
var-- 
	parameter-- 
in-- 
	operation-- '
.--' (

Parameters--( 2
)--2 3
{.. 
var// 	
description//
 
=// 
apiDescription// &
.//& '!
ParameterDescriptions//' <
.//< =
First//= B
(//B C
p//C D
=>//E G
p//H I
.//I J
Name//J N
==//O Q
	parameter//R [
.//[ \
Name//\ `
)//` a
;//a b
	parameter11 
.11 
Description11 
??=11 
description11  +
.11+ ,
ModelMetadata11, 9
?119 :
.11: ;
Description11; F
;11F G
if33 
(33	 

	parameter33
 
.33 
Schema33 
.33 
Default33 "
==33# %
null33& *
&&33+ -
description44 
.44 
DefaultValue44 #
!=44$ &
null44' +
&&44, .
description55 
.55 
DefaultValue55 #
is55$ &
not55' *
DBNull55+ 1
&&552 4
description66 
.66 
ModelMetadata66 $
is66% '
{66( )
}66* +
modelMetadata66, 9
)669 :
{77 
var99 
json99 
=99 
JsonSerializer99 !
.99! "
	Serialize99" +
(99+ ,
description99, 7
.997 8
DefaultValue998 D
,99D E
modelMetadata99F S
.99S T
	ModelType99T ]
)99] ^
;99^ _
	parameter:: 
.:: 
Schema:: 
.:: 
Default::  
=::! "
OpenApiAnyFactory::# 4
.::4 5
CreateFromJson::5 C
(::C D
json::D H
)::H I
;::I J
};; 
	parameter== 
.== 
Required== 
|=== 
description== '
.==' (

IsRequired==( 2
;==2 3
}>> 
}?? 
}@@ ¢Õ
S/Users/pavel/project/NetMentoring/CatalogWebApi/Controllers/V1/CatalogController.cs
	namespace 	
CatalogWebApi
 
. 
Controllers #
.# $
V1$ &
;& '
[ 

ApiVersion 
( 
$str 
) 
] 
[ 
ApiController 
] 
[ 
Route 
( 
$str /
)/ 0
]0 1
public 
class 
CatalogController 
:  
ControllerBase! /
{ 
private 
readonly 
ILogger 
< 
CatalogController .
>. /
_logger0 7
;7 8
private 
readonly 
ICategoryService %
_categoryService& 6
;6 7
private 
readonly 
IProductItemService (
_productItemService) <
;< =
public 

CatalogController 
( 
ILogger $
<$ %
CatalogController% 6
>6 7
logger8 >
,> ?
ICategoryService 
categoryService (
,( )
IProductItemService 
productItemService .
). /
{ 
_logger 
= 
logger 
; 
_categoryService   
=   
categoryService   *
;  * +
_productItemService!! 
=!! 
productItemService!! 0
;!!0 1
}"" 
[** 
MapToApiVersion** 
(** 
$str** 
)** 
]** 
[++ 
HttpGet++ 
(++ 
$str++ 
)++ 
]++ 
[,, 
	Authorize,, 
(,, 
$str,, 
),, 
],,  
public-- 

async-- 
Task-- 
<-- 
IActionResult-- #
>--# $
GetCategories--% 2
(--2 3
)--3 4
{.. 
try// 
{00 	
var11 

categories11 
=11 
await11 "
_categoryService11# 3
.113 4
GetAllAsync114 ?
(11? @
)11@ A
;11A B
var33 
response33 
=33 
new33 
HalResponse33 *
{44 
Links55 
=55 
new55 
List55  
<55  !
Link55! %
>55% &
{66 
new77 
(77 
)77 
{77 
Rel77 
=77  !
$str77" (
,77( )
Href77* .
=77/ 0
$str771 F
}77G H
,77H I
new88 
(88 
)88 
{88 
Rel88 
=88  !
$str88" '
,88' (
Href88) -
=88. /
$str880 E
,88E F
Method88G M
=88N O
$str88P V
}88W X
}99 
,99 
Embedded:: 
=:: 
new:: 

Dictionary:: )
<::) *
string::* 0
,::0 1
object::2 8
>::8 9
{;; 
[<< 
$str<< !
]<<! "
=<<# $

categories<<% /
.<</ 0
Select<<0 6
(<<6 7
c<<7 8
=><<9 ;
new<<< ?
HalResponse<<@ K
{== 
Links>> 
=>> 
new>>  #
List>>$ (
<>>( )
Link>>) -
>>>- .
{?? 
new@@ 
(@@  
)@@  !
{@@" #
Rel@@$ '
=@@( )
$str@@* 0
,@@0 1
Href@@2 6
=@@7 8
$"@@9 ;
$str@@; O
{@@O P
c@@P Q
.@@Q R
Id@@R T
}@@T U
"@@U V
}@@W X
,@@X Y
newAA 
(AA  
)AA  !
{AA" #
RelAA$ '
=AA( )
$strAA* 2
,AA2 3
HrefAA4 8
=AA9 :
$"AA; =
$strAA= Q
{AAQ R
cAAR S
.AAS T
IdAAT V
}AAV W
"AAW X
,AAX Y
MethodAAZ `
=AAa b
$strAAc h
}AAi j
,AAj k
newBB 
(BB  
)BB  !
{BB" #
RelBB$ '
=BB( )
$strBB* 2
,BB2 3
HrefBB4 8
=BB9 :
$"BB; =
$strBB= Q
{BBQ R
cBBR S
.BBS T
IdBBT V
}BBV W
"BBW X
,BBX Y
MethodBBZ `
=BBa b
$strBBc k
}BBl m
}CC 
,CC 
DataDD 
=DD 
cDD  
}EE 
)EE 
}FF 
}GG 
;GG 
_loggerHH 
.HH 

LogWarningHH 
(HH 
$strHH @
)HH@ A
;HHA B
_loggerII 
.II 
LogErrorII 
(II 
$strII C
)IIC D
;IID E
returnJJ 
OkJJ 
(JJ 
responseJJ 
)JJ 
;JJ  
}KK 	
catchLL 
(LL 
	ExceptionLL 
eLL 
)LL 
{MM 	
returnNN 
NotFoundNN 
(NN 
eNN 
.NN 
MessageNN %
)NN% &
;NN& '
}OO 	
}PP 
[YY 
HttpPostYY 
(YY 
$strYY 
)YY 
]YY 
[ZZ 
	AuthorizeZZ 
(ZZ 
$strZZ  
)ZZ  !
]ZZ! "
public[[ 

async[[ 
Task[[ 
<[[ 
IActionResult[[ #
>[[# $
AddCategory[[% 0
([[0 1
Category[[1 9
category[[: B
)[[B C
{\\ 
try]] 
{^^ 	
await__ 
_categoryService__ "
.__" #
AddAsync__# +
(__+ ,
category__, 4
)__4 5
;__5 6
return`` 
CreatedAtAction`` "
(``" #
nameof``# )
(``) *
GetCategoryById``* 9
)``9 :
,``: ;
new``< ?
{``@ A
id``B D
=``E F
category``G O
.``O P
Id``P R
}``S T
,``T U
category``V ^
)``^ _
;``_ `
}aa 	
catchbb 
(bb 
	Exceptionbb 
ebb 
)bb 
{cc 	
returndd 

BadRequestdd 
(dd 
edd 
.dd  
Messagedd  '
)dd' (
;dd( )
}ee 	
}ff 
[oo 
HttpGetoo 
(oo 
$stroo 
)oo 
]oo  
[pp 
	Authorizepp 
(pp 
$strpp 
)pp 
]pp  
publicqq 

asyncqq 
Taskqq 
<qq 
IActionResultqq #
>qq# $
GetCategoryByIdqq% 4
(qq4 5
intqq5 8
idqq9 ;
)qq; <
{rr 
tryss 
{tt 	
varuu 
categoryuu 
=uu 
awaituu  
_categoryServiceuu! 1
.uu1 2
GetByIdAsyncuu2 >
(uu> ?
iduu? A
)uuA B
;uuB C
ifww 
(ww 
categoryww 
==ww 
nullww  
)ww  !
{xx 
returnyy 
NotFoundyy 
(yy  
)yy  !
;yy! "
}zz 
var|| 
response|| 
=|| 
new|| 
HalResponse|| *
{}} 
Links~~ 
=~~ 
new~~ 
List~~  
<~~  !
Link~~! %
>~~% &
{ 
new
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÄÄ 
Rel
ÄÄ 
=
ÄÄ  !
$str
ÄÄ" (
,
ÄÄ( )
Href
ÄÄ* .
=
ÄÄ/ 0
$"
ÄÄ1 3
$str
ÄÄ3 G
{
ÄÄG H
id
ÄÄH J
}
ÄÄJ K
"
ÄÄK L
}
ÄÄM N
,
ÄÄN O
new
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÅÅ 
Rel
ÅÅ 
=
ÅÅ  !
$str
ÅÅ" *
,
ÅÅ* +
Href
ÅÅ, 0
=
ÅÅ1 2
$"
ÅÅ3 5
$str
ÅÅ5 I
{
ÅÅI J
id
ÅÅJ L
}
ÅÅL M
"
ÅÅM N
,
ÅÅN O
Method
ÅÅP V
=
ÅÅW X
$str
ÅÅY ^
}
ÅÅ_ `
,
ÅÅ` a
new
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÇÇ 
Rel
ÇÇ 
=
ÇÇ  !
$str
ÇÇ" *
,
ÇÇ* +
Href
ÇÇ, 0
=
ÇÇ1 2
$"
ÇÇ3 5
$str
ÇÇ5 I
{
ÇÇI J
id
ÇÇJ L
}
ÇÇL M
"
ÇÇM N
,
ÇÇN O
Method
ÇÇP V
=
ÇÇW X
$str
ÇÇY a
}
ÇÇb c
}
ÉÉ 
,
ÉÉ 
Data
ÑÑ 
=
ÑÑ 
category
ÑÑ 
}
ÖÖ 
;
ÖÖ 
return
áá 
Ok
áá 
(
áá 
response
áá 
)
áá 
;
áá  
}
àà 	
catch
ââ 
(
ââ 
	Exception
ââ 
e
ââ 
)
ââ 
{
ää 	
return
ãã 
NotFound
ãã 
(
ãã 
e
ãã 
.
ãã 
Message
ãã %
)
ãã% &
;
ãã& '
}
åå 	
}
çç 
[
ññ 
HttpPut
ññ 
(
ññ 
$str
ññ 
)
ññ 
]
ññ 
[
óó 
	Authorize
óó 
(
óó 
$str
óó  
)
óó  !
]
óó! "
public
òò 

async
òò 
Task
òò 
<
òò 
IActionResult
òò #
>
òò# $
UpdateCategory
òò% 3
(
òò3 4
Category
òò4 <
category
òò= E
)
òòE F
{
ôô 
try
öö 
{
õõ 	
if
úú 
(
úú 
category
úú 
==
úú 
null
úú  
)
úú  !
{
ùù 
return
ûû 

BadRequest
ûû !
(
ûû! "
)
ûû" #
;
ûû# $
}
üü 
await
°° 
_categoryService
°° "
.
°°" #
UpdateAsync
°°# .
(
°°. /
category
°°/ 7
)
°°7 8
;
°°8 9
return
¢¢ 
Ok
¢¢ 
(
¢¢ 
$"
¢¢ 
$str
¢¢ )
{
¢¢) *
category
¢¢* 2
.
¢¢2 3
Id
¢¢3 5
}
¢¢5 6
$str
¢¢6 >
"
¢¢> ?
)
¢¢? @
;
¢¢@ A
}
££ 	
catch
§§ 
(
§§ 
	Exception
§§ 
e
§§ 
)
§§ 
{
•• 	
return
¶¶ 

BadRequest
¶¶ 
(
¶¶ 
e
¶¶ 
.
¶¶  
Message
¶¶  '
)
¶¶' (
;
¶¶( )
}
ßß 	
}
®® 
[
±± 

HttpDelete
±± 
(
±± 
$str
±± !
)
±±! "
]
±±" #
[
≤≤ 
	Authorize
≤≤ 
(
≤≤ 
$str
≤≤  
)
≤≤  !
]
≤≤! "
public
≥≥ 

async
≥≥ 
Task
≥≥ 
<
≥≥ 
IActionResult
≥≥ #
>
≥≥# $
DeleteCategory
≥≥% 3
(
≥≥3 4
int
≥≥4 7
id
≥≥8 :
)
≥≥: ;
{
¥¥ 
try
µµ 
{
∂∂ 	
await
∑∑ 
_categoryService
∑∑ "
.
∑∑" #
DeleteAsync
∑∑# .
(
∑∑. /
id
∑∑/ 1
)
∑∑1 2
;
∑∑2 3
return
∏∏ 
Ok
∏∏ 
(
∏∏ 
$"
∏∏ 
$str
∏∏ )
{
∏∏) *
id
∏∏* ,
}
∏∏, -
$str
∏∏- H
"
∏∏H I
)
∏∏I J
;
∏∏J K
}
ππ 	
catch
∫∫ 
(
∫∫ 
	Exception
∫∫ 
e
∫∫ 
)
∫∫ 
{
ªª 	
return
ºº 
NotFound
ºº 
(
ºº 
e
ºº 
.
ºº 
Message
ºº %
)
ºº% &
;
ºº& '
}
ΩΩ 	
}
ææ 
[
»» 
HttpGet
»» 
(
»» 
$str
»» 
)
»» 
]
»» 
public
…… 

async
…… 
Task
…… 
<
…… 
IActionResult
…… #
>
……# $
GetProductItems
……% 4
(
……4 5
int
……5 8

categoryId
……9 C
,
……C D
int
……E H
page
……I M
=
……N O
$num
……P Q
)
……Q R
{
   
try
ÀÀ 
{
ÃÃ 	
var
ÕÕ 
items
ÕÕ 
=
ÕÕ 
await
ÕÕ !
_productItemService
ÕÕ 1
.
ÕÕ1 2
GetAllAsync
ÕÕ2 =
(
ÕÕ= >
page
ÕÕ> B
)
ÕÕB C
;
ÕÕC D
var
œœ 
productItems
œœ 
=
œœ 
items
œœ $
.
œœ$ %
ToList
œœ% +
(
œœ+ ,
)
œœ, -
;
œœ- .
if
–– 
(
–– 
!
–– 
productItems
–– 
.
–– 
Any
–– !
(
––! "
)
––" #
)
––# $
{
—— 
return
““ 
NotFound
““ 
(
““  
)
““  !
;
““! "
}
”” 
var
’’ 
response
’’ 
=
’’ 
new
’’ 
HalResponse
’’ *
{
÷÷ 
Links
◊◊ 
=
◊◊ 
new
◊◊ 
List
◊◊  
<
◊◊  !
Link
◊◊! %
>
◊◊% &
{
ÿÿ 
new
ŸŸ 
(
ŸŸ 
)
ŸŸ 
{
ŸŸ 
Rel
ŸŸ 
=
ŸŸ  !
$str
ŸŸ" (
,
ŸŸ( )
Href
ŸŸ* .
=
ŸŸ/ 0
$"
ŸŸ1 3
$str
ŸŸ3 M
{
ŸŸM N

categoryId
ŸŸN X
}
ŸŸX Y
$str
ŸŸY _
{
ŸŸ_ `
page
ŸŸ` d
}
ŸŸd e
"
ŸŸe f
}
ŸŸg h
,
ŸŸh i
new
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
{
⁄⁄ 
Rel
⁄⁄ 
=
⁄⁄  !
$str
⁄⁄" '
,
⁄⁄' (
Href
⁄⁄) -
=
⁄⁄. /
$str
⁄⁄0 @
,
⁄⁄@ A
Method
⁄⁄B H
=
⁄⁄I J
$str
⁄⁄K Q
}
⁄⁄R S
}
€€ 
,
€€ 
Embedded
‹‹ 
=
‹‹ 
new
‹‹ 

Dictionary
‹‹ )
<
‹‹) *
string
‹‹* 0
,
‹‹0 1
object
‹‹2 8
>
‹‹8 9
{
›› 
[
ﬁﬁ 
$str
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ 
productItems
ﬁﬁ  ,
.
ﬁﬁ, -
Select
ﬁﬁ- 3
(
ﬁﬁ3 4
i
ﬁﬁ4 5
=>
ﬁﬁ6 8
new
ﬁﬁ9 <
HalResponse
ﬁﬁ= H
{
ﬂﬂ 
Links
‡‡ 
=
‡‡ 
new
‡‡  #
List
‡‡$ (
<
‡‡( )
Link
‡‡) -
>
‡‡- .
{
·· 
new
‚‚ 
(
‚‚  
)
‚‚  !
{
‚‚" #
Rel
‚‚$ '
=
‚‚( )
$str
‚‚* 0
,
‚‚0 1
Href
‚‚2 6
=
‚‚7 8
$"
‚‚9 ;
$str
‚‚; J
{
‚‚J K
i
‚‚K L
.
‚‚L M
Id
‚‚M O
}
‚‚O P
"
‚‚P Q
}
‚‚R S
,
‚‚S T
new
„„ 
(
„„  
)
„„  !
{
„„" #
Rel
„„$ '
=
„„( )
$str
„„* 2
,
„„2 3
Href
„„4 8
=
„„9 :
$"
„„; =
$str
„„= L
{
„„L M
i
„„M N
.
„„N O
Id
„„O Q
}
„„Q R
"
„„R S
,
„„S T
Method
„„U [
=
„„\ ]
$str
„„^ c
}
„„d e
,
„„e f
new
‰‰ 
(
‰‰  
)
‰‰  !
{
‰‰" #
Rel
‰‰$ '
=
‰‰( )
$str
‰‰* 2
,
‰‰2 3
Href
‰‰4 8
=
‰‰9 :
$"
‰‰; =
$str
‰‰= L
{
‰‰L M
i
‰‰M N
.
‰‰N O
Id
‰‰O Q
}
‰‰Q R
"
‰‰R S
,
‰‰S T
Method
‰‰U [
=
‰‰\ ]
$str
‰‰^ f
}
‰‰g h
}
ÂÂ 
,
ÂÂ 
Data
ÊÊ 
=
ÊÊ 
i
ÊÊ  
}
ÁÁ 
)
ÁÁ 
}
ËË 
}
ÈÈ 
;
ÈÈ 
return
ÍÍ 
Ok
ÍÍ 
(
ÍÍ 
response
ÍÍ 
)
ÍÍ 
;
ÍÍ  
}
ÎÎ 	
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
e
ÏÏ 
)
ÏÏ 
{
ÌÌ 	
return
ÓÓ 

BadRequest
ÓÓ 
(
ÓÓ 
e
ÓÓ 
.
ÓÓ  
Message
ÓÓ  '
)
ÓÓ' (
;
ÓÓ( )
}
ÔÔ 	
}
 
[
˘˘ 
HttpPost
˘˘ 
(
˘˘ 
$str
˘˘ 
)
˘˘ 
]
˘˘ 
public
˙˙ 

async
˙˙ 
Task
˙˙ 
<
˙˙ 
IActionResult
˙˙ #
>
˙˙# $
AddProductItem
˙˙% 3
(
˙˙3 4
ProductItem
˙˙4 ?
item
˙˙@ D
)
˙˙D E
{
˚˚ 
if
¸¸ 

(
¸¸ 
item
¸¸ 
==
¸¸ 
null
¸¸ 
)
¸¸ 
{
˝˝ 	
return
˛˛ 

BadRequest
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛  
}
ˇˇ 	
try
ÅÅ 
{
ÇÇ 	
await
ÉÉ !
_productItemService
ÉÉ %
.
ÉÉ% &
AddAsync
ÉÉ& .
(
ÉÉ. /
item
ÉÉ/ 3
)
ÉÉ3 4
;
ÉÉ4 5
return
ÑÑ 
CreatedAtAction
ÑÑ "
(
ÑÑ" #
nameof
ÑÑ# )
(
ÑÑ) * 
GetProductItemById
ÑÑ* <
)
ÑÑ< =
,
ÑÑ= >
new
ÑÑ? B
{
ÑÑC D
id
ÑÑE G
=
ÑÑH I
item
ÑÑJ N
.
ÑÑN O
Id
ÑÑO Q
}
ÑÑR S
,
ÑÑS T
item
ÑÑU Y
)
ÑÑY Z
;
ÑÑZ [
}
ÖÖ 	
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
e
ÜÜ 
)
ÜÜ 
{
áá 	
return
àà 

BadRequest
àà 
(
àà 
e
àà 
.
àà  
Message
àà  '
)
àà' (
;
àà( )
}
ââ 	
}
ää 
[
ìì 
HttpGet
ìì 
(
ìì 
$str
ìì 
)
ìì 
]
ìì 
public
îî 

async
îî 
Task
îî 
<
îî 
IActionResult
îî #
>
îî# $ 
GetProductItemById
îî% 7
(
îî7 8
int
îî8 ;
id
îî< >
)
îî> ?
{
ïï 
try
ññ 
{
óó 	
var
òò 
item
òò 
=
òò 
await
òò !
_productItemService
òò 0
.
òò0 1
GetByIdAsync
òò1 =
(
òò= >
id
òò> @
)
òò@ A
;
òòA B
if
öö 
(
öö 
item
öö 
==
öö 
null
öö 
)
öö 
{
õõ 
return
úú 
NotFound
úú 
(
úú  
)
úú  !
;
úú! "
}
ùù 
var
üü 
response
üü 
=
üü 
new
üü 
HalResponse
üü *
{
†† 
Links
°° 
=
°° 
new
°° 
List
°°  
<
°°  !
Link
°°! %
>
°°% &
{
¢¢ 
new
££ 
(
££ 
)
££ 
{
££ 
Rel
££ 
=
££  !
$str
££" (
,
££( )
Href
££* .
=
££/ 0
$"
££1 3
$str
££3 B
{
££B C
id
££C E
}
££E F
"
££F G
}
££H I
,
££I J
new
§§ 
(
§§ 
)
§§ 
{
§§ 
Rel
§§ 
=
§§  !
$str
§§" *
,
§§* +
Href
§§, 0
=
§§1 2
$"
§§3 5
$str
§§5 D
{
§§D E
id
§§E G
}
§§G H
"
§§H I
,
§§I J
Method
§§K Q
=
§§R S
$str
§§T Y
}
§§Z [
,
§§[ \
new
•• 
(
•• 
)
•• 
{
•• 
Rel
•• 
=
••  !
$str
••" *
,
••* +
Href
••, 0
=
••1 2
$"
••3 5
$str
••5 D
{
••D E
id
••E G
}
••G H
"
••H I
,
••I J
Method
••K Q
=
••R S
$str
••T \
}
••] ^
}
¶¶ 
,
¶¶ 
Data
ßß 
=
ßß 
item
ßß 
}
®® 
;
®® 
return
™™ 
Ok
™™ 
(
™™ 
response
™™ 
)
™™ 
;
™™  
}
´´ 	
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
e
¨¨ 
)
¨¨ 
{
≠≠ 	
return
ÆÆ 
NotFound
ÆÆ 
(
ÆÆ 
e
ÆÆ 
.
ÆÆ 
Message
ÆÆ %
)
ÆÆ% &
;
ÆÆ& '
}
ØØ 	
}
∞∞ 
[
ππ 
HttpGet
ππ 
(
ππ 
$str
ππ $
)
ππ$ %
]
ππ% &
public
∫∫ 

async
∫∫ 
Task
∫∫ 
<
∫∫ 
IActionResult
∫∫ #
>
∫∫# $+
GetProductItemPropertiesAsync
∫∫% B
(
∫∫B C
int
∫∫C F
id
∫∫G I
)
∫∫I J
{
ªª 
var
ΩΩ 

properties
ΩΩ 
=
ΩΩ 
new
ΩΩ 

Dictionary
ΩΩ '
<
ΩΩ' (
string
ΩΩ( .
,
ΩΩ. /
string
ΩΩ0 6
>
ΩΩ6 7
{
ææ 	
{
øø 
$str
øø 
,
øø 
$str
øø  
}
øø! "
,
øø" #
{
¿¿ 
$str
¿¿ 
,
¿¿ 
$str
¿¿ 
}
¿¿ 
}
¡¡ 	
;
¡¡	 

var
√√ 
catalogItem
√√ 
=
√√ 
await
√√ !
_productItemService
√√  3
.
√√3 4
GetByIdAsync
√√4 @
(
√√@ A
id
√√A C
)
√√C D
;
√√D E
if
≈≈ 

(
≈≈ 
catalogItem
≈≈ 
==
≈≈ 
null
≈≈ 
)
≈≈  
{
∆∆ 	
return
«« 
NotFound
«« 
(
«« 
)
«« 
;
«« 
}
»» 	
var
   
response
   
=
   
new
   
HalResponse
   &
{
ÀÀ 	
Links
ÃÃ 
=
ÃÃ 
new
ÃÃ 
List
ÃÃ 
<
ÃÃ 
Link
ÃÃ !
>
ÃÃ! "
{
ÕÕ 	
new
ŒŒ 
(
ŒŒ 
)
ŒŒ 
{
ŒŒ 
Rel
ŒŒ 
=
ŒŒ 
$str
ŒŒ  
,
ŒŒ  !
Href
ŒŒ" &
=
ŒŒ' (
$"
ŒŒ) +
$str
ŒŒ+ :
{
ŒŒ: ;
id
ŒŒ; =
}
ŒŒ= >
$str
ŒŒ> I
"
ŒŒI J
}
ŒŒK L
}
œœ 	
,
œœ	 

Data
–– 
=
–– 
new
–– 
{
—— 
CatalogItemId
““ 
=
““ 
catalogItem
““  +
.
““+ ,
Id
““, .
,
““. /

Properties
”” 
=
”” 

properties
”” '
}
‘‘ 
}
’’ 	
;
’’	 

return
◊◊ 
Ok
◊◊ 
(
◊◊ 
response
◊◊ 
)
◊◊ 
;
◊◊ 
}
ÿÿ 
[
·· 
HttpPut
·· 
(
·· 
$str
·· 
)
·· 
]
·· 
public
‚‚ 

async
‚‚ 
Task
‚‚ 
<
‚‚ 
IActionResult
‚‚ #
>
‚‚# $
UpdateProductItem
‚‚% 6
(
‚‚6 7
ProductItem
‚‚7 B
item
‚‚C G
)
‚‚G H
{
„„ 
if
‰‰ 

(
‰‰ 
item
‰‰ 
==
‰‰ 
null
‰‰ 
)
‰‰ 
{
ÂÂ 	
return
ÊÊ 

BadRequest
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ  
}
ÁÁ 	
try
ÈÈ 
{
ÍÍ 	
await
ÎÎ !
_productItemService
ÎÎ %
.
ÎÎ% &
UpdateAsync
ÎÎ& 1
(
ÎÎ1 2
item
ÎÎ2 6
)
ÎÎ6 7
;
ÎÎ7 8
return
ÏÏ 
Ok
ÏÏ 
(
ÏÏ 
$"
ÏÏ 
$str
ÏÏ -
{
ÏÏ- .
item
ÏÏ. 2
.
ÏÏ2 3
Id
ÏÏ3 5
}
ÏÏ5 6
$str
ÏÏ6 >
"
ÏÏ> ?
)
ÏÏ? @
;
ÏÏ@ A
}
ÌÌ 	
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
e
ÓÓ 
)
ÓÓ 
{
ÔÔ 	
return
 
NotFound
 
(
 
e
 
.
 
Message
 %
)
% &
;
& '
}
ÒÒ 	
}
ÚÚ 
[
˚˚ 

HttpDelete
˚˚ 
(
˚˚ 
$str
˚˚ 
)
˚˚ 
]
˚˚ 
public
¸¸ 

async
¸¸ 
Task
¸¸ 
<
¸¸ 
IActionResult
¸¸ #
>
¸¸# $
DeleteProductItem
¸¸% 6
(
¸¸6 7
int
¸¸7 :
id
¸¸; =
)
¸¸= >
{
˝˝ 
if
˛˛ 

(
˛˛ 
id
˛˛ 
==
˛˛ 
$num
˛˛ 
)
˛˛ 
{
ˇˇ 	
return
ÄÄ 

BadRequest
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ  
}
ÅÅ 	
try
ÉÉ 
{
ÑÑ 	
await
ÖÖ !
_productItemService
ÖÖ %
.
ÖÖ% &
DeleteAsync
ÖÖ& 1
(
ÖÖ1 2
id
ÖÖ2 4
)
ÖÖ4 5
;
ÖÖ5 6
return
ÜÜ 
Ok
ÜÜ 
(
ÜÜ 
$"
ÜÜ 
$str
ÜÜ -
{
ÜÜ- .
id
ÜÜ. 0
}
ÜÜ0 1
$str
ÜÜ1 9
"
ÜÜ9 :
)
ÜÜ: ;
;
ÜÜ; <
}
áá 	
catch
àà 
(
àà 
	Exception
àà 
e
àà 
)
àà 
{
ââ 	
return
ää 
NotFound
ää 
(
ää 
e
ää 
.
ää 
Message
ää %
)
ää% &
;
ää& '
}
ãã 	
}
åå 
}çç —
H/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/CatalogSchema.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
;  
public

 
class

 
CatalogSchema

 
:

 
Schema

 #
{ 
public 

CatalogSchema 
( 
CatalogQuery %
query& +
,+ ,
CatalogMutation- <
mutation= E
)E F
:G H
baseI M
(M N
)N O
{ 
Query 
= 
query 
; 
Mutation 
= 
mutation 
; 
} 
} ÿ<
T/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/Mutations/CatalogMutation.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
.  
	Mutations  )
;) *
public 
class 
CatalogMutation 
: 
ObjectGraphType .
{ 
public 

CatalogMutation 
( 
IServiceProvider +
serviceProvider, ;
); <
{ 
var 
categoryService 
= 
serviceProvider -
.- .
GetRequiredService. @
<@ A
ICategoryServiceA Q
>Q R
(R S
)S T
;T U
var 
productItemService 
=  
serviceProvider! 0
.0 1
GetRequiredService1 C
<C D
IProductItemServiceD W
>W X
(X Y
)Y Z
;Z [
Field 
< 
CategoryType 
> 
( 
$str )
)) *
. 	
	Arguments	 
( 
new 
QueryArguments 
(  
new 
QueryArgument !
<! "
NonNullGraphType" 2
<2 3
CategoryInputType3 D
>D E
>E F
{G H
NameI M
=N O
$strP Z
}[ \
) 	
)	 

. 	
ResolveAsync	 
( 
async 
context #
=>$ &
{ 	
var 
category 
= 
context "
." #
GetArgument# .
<. /
Category/ 7
>7 8
(8 9
$str9 C
)C D
;D E
await 
categoryService !
.! "
AddAsync" *
(* +
category+ 3
)3 4
;4 5
return 
category 
; 
}   	
)"" 	
;""	 

Field$$ 
<$$ 
ProductItemType$$ 
>$$ 
($$ 
$str$$ (
)$$( )
.%% 	
	Arguments%%	 
(%% 
new%% 
QueryArguments%% %
(%%% &
new&& 
QueryArgument&& !
<&&! "
NonNullGraphType&&" 2
<&&2 3 
ProductItemInputType&&3 G
>&&G H
>&&H I
{&&J K
Name&&L P
=&&Q R
$str&&S `
}&&a b
)'' 
)'' 
.(( 	
ResolveAsync((	 
((( 
async(( 
context(( #
=>(($ &
{)) 	
var** 
productItem** 
=** 
context** %
.**% &
GetArgument**& 1
<**1 2
ProductItem**2 =
>**= >
(**> ?
$str**? L
)**L M
;**M N
await++ 
productItemService++ $
.++$ %
AddAsync++% -
(++- .
productItem++. 9
)++9 :
;++: ;
return,, 
productItem,, 
;,, 
}-- 	
).. 	
;..	 

Field00 
<00 
CategoryType00 
>00 
(00 
$str00 ,
)00, -
.11 
	Arguments11 
(11 
new22 
QueryArguments22 
(22  
new33 
QueryArgument33 !
<33! "
NonNullGraphType33" 2
<332 3
CategoryInputType333 D
>33D E
>33E F
{33G H
Name33I M
=33N O
$str33P Z
}33[ \
)44 	
)44	 

.55 	
ResolveAsync55	 
(55 
async55 
context55 #
=>55$ &
{66 	
var77 
category77 
=77 
context77 "
.77" #
GetArgument77# .
<77. /
Category77/ 7
>777 8
(778 9
$str779 C
)77C D
;77D E
await99 
categoryService99 !
.99! "
UpdateAsync99" -
(99- .
category99. 6
)996 7
;997 8
return:: 
category:: 
;:: 
};; 	
);;	 

;;;
 
Field== 
<== 
ProductItemType== 
>== 
(== 
$str== +
)==+ ,
.>> 	
	Arguments>>	 
(>> 
new>> 
QueryArguments>> %
(>>% &
new?? 
QueryArgument?? !
<??! "
NonNullGraphType??" 2
<??2 3 
ProductItemInputType??3 G
>??G H
>??H I
{??J K
Name??L P
=??Q R
$str??S `
}??a b
)@@ 
)@@ 
.AA 	
ResolveAsyncAA	 
(AA 
asyncAA 
contextAA #
=>AA$ &
{BB 	
varCC 
productItemCC 
=CC 
contextCC %
.CC% &
GetArgumentCC& 1
<CC1 2
ProductItemCC2 =
>CC= >
(CC> ?
$strCC? L
)CCL M
;CCM N
awaitDD 
productItemServiceDD $
.DD$ %
UpdateAsyncDD% 0
(DD0 1
productItemDD1 <
)DD< =
;DD= >
returnEE 
productItemEE 
;EE 
}FF 	
)FF	 

;FF
 
FieldHH 
<HH 
BooleanGraphTypeHH 
>HH 
(HH  
$strHH  ,
)HH, -
.II 	
	ArgumentsII	 
(II 
newII 
QueryArgumentsII %
(II% &
newJJ 
QueryArgumentJJ !
<JJ! "
NonNullGraphTypeJJ" 2
<JJ2 3
IntGraphTypeJJ3 ?
>JJ? @
>JJ@ A
{JJB C
NameJJD H
=JJI J
$strJJK O
}JJP Q
)KK 
)KK 
.LL 	
ResolveAsyncLL	 
(LL 
asyncLL 
contextLL #
=>LL$ &
{MM 	
varNN 
idNN 
=NN 
contextNN 
.NN 
GetArgumentNN (
<NN( )
intNN) ,
>NN, -
(NN- .
$strNN. 2
)NN2 3
;NN3 4
awaitOO 
productItemServiceOO $
.OO$ %
DeleteAsyncOO% 0
(OO0 1
idOO1 3
)OO3 4
;OO4 5
returnPP 
truePP 
;PP 
}QQ 	
)QQ	 

;QQ
 
FieldSS 
<SS 
BooleanGraphTypeSS 
>SS 
(SS  
$strSS  0
)SS0 1
.TT 	
	ArgumentsTT	 
(TT 
newTT 
QueryArgumentsTT %
(TT% &
newUU 
QueryArgumentUU !
<UU! "
NonNullGraphTypeUU" 2
<UU2 3
IntGraphTypeUU3 ?
>UU? @
>UU@ A
{UUB C
NameUUD H
=UUI J
$strUUK O
}UUP Q
)VV 
)VV 
.WW 	
ResolveAsyncWW	 
(WW 
asyncWW 
contextWW #
=>WW$ &
{XX 	
varYY 
idYY 
=YY 
contextYY 
.YY 
GetArgumentYY (
<YY( )
intYY) ,
>YY, -
(YY- .
$strYY. 2
)YY2 3
;YY3 4
awaitZZ 
categoryServiceZZ !
.ZZ! "
DeleteAsyncZZ" -
(ZZ- .
idZZ. 0
)ZZ0 1
;ZZ1 2
return[[ 
true[[ 
;[[ 
}\\ 	
)\\	 

;\\
 
}]] 
}^^ Ë
O/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/Queries/CatalogQuery.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
.  
Queries  '
;' (
public 
class 
CatalogQuery 
: 
ObjectGraphType +
{ 
public 

CatalogQuery 
( 
IServiceProvider (
serviceProvider) 8
)8 9
{ 
var 
categoryService 
= 
serviceProvider -
.- .
GetRequiredService. @
<@ A
ICategoryServiceA Q
>Q R
(R S
)S T
;T U
var 
productItemService 
=  
serviceProvider! 0
.0 1
GetRequiredService1 C
<C D
IProductItemServiceD W
>W X
(X Y
)Y Z
;Z [
Field 
< 
ListGraphType 
< 
CategoryType (
>( )
>) *
(* +
$str+ 7
)7 8
. 	
Description	 
( 
$str 5
)5 6
. 	
ResolveAsync	 
( 
async 
context #
=>$ &
{ 
var 

categories 
=  
await! &
categoryService' 6
.6 7
GetAllAsync7 B
(B C
)C D
;D E
return 

categories !
;! "
} 
) 
; 
Field 
< 
ListGraphType 
< 
ProductItemType +
>+ ,
>, -
(- .
$str. 5
)5 6
.   	
Description  	 
(   
$str   0
)  0 1
.!! 	
	Arguments!!	 
(!! 
new"" 
QueryArguments"" 
("" 
new## 
QueryArgument## !
<##! "
NonNullGraphType##" 2
<##2 3
IntGraphType##3 ?
>##? @
>##@ A
{##B C
Name##D H
=##I J
$str##K Q
}##R S
,##S T
new$$ 
QueryArgument$$ !
<$$! "
NonNullGraphType$$" 2
<$$2 3
IntGraphType$$3 ?
>$$? @
>$$@ A
{$$B C
Name$$D H
=$$I J
$str$$K U
}$$V W
)%% 
)&& 	
.'' 	
ResolveAsync''	 
('' 
async'' 
context'' #
=>''$ &
{(( 
var)) 
page)) 
=)) 
context)) "
.))" #
GetArgument))# .
<)). /
int))/ 2
>))2 3
())3 4
$str))4 :
))): ;
;)); <
var** 
pageSize** 
=** 
context** &
.**& '
GetArgument**' 2
<**2 3
int**3 6
>**6 7
(**7 8
$str**8 B
)**B C
;**C D
return++ 
await++ 
productItemService++ /
.++/ 0
GetAllAsync++0 ;
(++; <
page++< @
,++@ A
pageSize++B J
)++J K
;++K L
},, 
)-- 	
;--	 

}.. 
}// ß
R/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/Types/CategoryInputType.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
.  
Types  %
{ 
public		 

class		 
CategoryInputType		 "
:		# $ 
InputObjectGraphType		% 9
<		9 :
Category		: B
>		B C
{

 
public 
CategoryInputType  
(  !
)! "
{ 	
Name 
= 
$str "
;" #
Field 
< 
NonNullGraphType "
<" #
StringGraphType# 2
>2 3
>3 4
(4 5
$str5 ;
); <
;< =
} 	
} 
} œ
M/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/Types/CategoryType.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
.  
Types  %
{ 
public		 

class		 
CategoryType		 
:		 
ObjectGraphType		  /
<		/ 0
Category		0 8
>		8 9
{

 
public 
CategoryType 
( 
) 
{ 	
Field 
( 
x 
=> 
x 
. 
Id 
, 
type !
:! "
typeof# )
() *
IdGraphType* 5
)5 6
)6 7
.7 8
Description8 C
(C D
$strD ]
)] ^
;^ _
Field 
( 
x 
=> 
x 
. 
Name 
) 
. 
Description *
(* +
$str+ F
)F G
;G H
} 	
} 
} ’
U/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/Types/ProductItemInputType.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
.  
Types  %
{ 
public		 

class		  
ProductItemInputType		 %
:		& ' 
InputObjectGraphType		( <
<		< =
ProductItem		= H
>		H I
{

 
public  
ProductItemInputType #
(# $
)$ %
{ 	
Name 
= 
$str %
;% &
Field 
< 
NonNullGraphType "
<" #
StringGraphType# 2
>2 3
>3 4
(4 5
$str5 ;
); <
;< =
Field 
< 
NonNullGraphType "
<" #
StringGraphType# 2
>2 3
>3 4
(4 5
$str5 B
)B C
;C D
Field 
< 
NonNullGraphType "
<" #
DecimalGraphType# 3
>3 4
>4 5
(5 6
$str6 =
)= >
;> ?
Field 
< 
NonNullGraphType "
<" #
StringGraphType# 2
>2 3
>3 4
(4 5
$str5 ?
)? @
;@ A
Field 
< 
NonNullGraphType "
<" #
IntGraphType# /
>/ 0
>0 1
(1 2
$str2 >
)> ?
;? @
} 	
} 
} ú
P/Users/pavel/project/NetMentoring/CatalogWebApi/GraphQL/Types/ProductItemType.cs
	namespace 	
CatalogWebApi
 
. 
GraphQL 
.  
Types  %
{ 
public		 

class		 
ProductItemType		  
:		! "
ObjectGraphType		# 2
<		2 3
ProductItem		3 >
>		> ?
{

 
public 
ProductItemType 
( 
)  
{ 	
Field 
( 
x 
=> 
x 
. 
Id 
, 
type !
:! "
typeof# )
() *
IdGraphType* 5
)5 6
)6 7
.7 8
Description8 C
(C D
$strD a
)a b
;b c
Field 
( 
x 
=> 
x 
. 
Name 
) 
. 
Description *
(* +
$str+ J
)J K
;K L
Field 
( 
x 
=> 
x 
. 
Description $
)$ %
.% &
Description& 1
(1 2
$str2 X
)X Y
;Y Z
Field 
( 
x 
=> 
x 
. 
Price 
) 
.  
Description  +
(+ ,
$str, L
)L M
;M N
Field 
( 
x 
=> 
x 
. 
ImageUrl !
)! "
." #
Description# .
(. /
$str/ [
)[ \
;\ ]
} 	
} 
} Ü
G/Users/pavel/project/NetMentoring/CatalogWebApi/HalModel/HalResponse.cs
	namespace 	
CatalogWebApi
 
. 
HalModel  
;  !
public 
class 
HalResponse 
{ 
public 
List	 
< 
Link 
> 
? 
Links 
{ 
get  
;  !
set" %
;% &
}' (
public 

Dictionary	 
< 
string 
, 
object "
>" #
?# $
Embedded% -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
object	 
? 
Data 
{ 
get 
; 
set  
;  !
}" #
} Ì
@/Users/pavel/project/NetMentoring/CatalogWebApi/HalModel/Link.cs
	namespace 	
CatalogWebApi
 
. 
HalModel  
;  !
public 
class 
Link 
{ 
public 
string	 
? 
Rel 
{ 
get 
; 
set 
;  
}! "
public 
string	 
? 
Href 
{ 
get 
; 
set  
;  !
}" #
public 
string	 
? 
Method 
{ 
get 
; 
set "
;" #
}$ %
} Í<
:/Users/pavel/project/NetMentoring/CatalogWebApi/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddDbContext 
< 
CatalogDbContext .
>. /
(/ 0
options0 7
=>8 :
{; <
options= D
.D E
UseInMemoryDatabaseE X
(X Y
$strY b
)b c
;c d
}e f
)f g
;g h
builder 
. 
Services 
. +
AddApplicationInsightsTelemetry 0
(0 1
)1 2
;2 3
builder 
. 
Services 
. 
AddAuthentication "
(" #
JwtBearerDefaults# 4
.4 5 
AuthenticationScheme5 I
)I J
. 
AddJwtBearer 
( 

AuthConfig 
. 
ConfigureJwtBearer /
(/ 0
builder0 7
)7 8
)8 9
;9 :
builder 
. 
Services 
. 
AddAuthorization !
(! "

AuthConfig" ,
., -"
ConfigureAuthorization- C
(C D
builderD K
)K L
)L M
;M N
builder 
. 
Services 
. 
AddSingleton 
< !
IAuthorizationHandler 3
,3 4
HasScopeHandler5 D
>D E
(E F
)F G
;G H
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. 
AddApiVersioning !
(! "
SwaggerConfig" /
./ 0%
SetupApiVersioningOptions0 I
)I J
.J K
AddApiExplorerK Y
(Y Z
SwaggerConfigZ g
.g h#
SetupApiExplorerOptionsh 
)	 Ä
;
Ä Å
builder 
. 
Services 
. 
AddTransient 
< 
IConfigureOptions /
</ 0
SwaggerGenOptions0 A
>A B
,B C#
ConfigureSwaggerOptionsD [
>[ \
(\ ]
)] ^
;^ _
builder 
. 
Services 
. 
AddSwaggerGen 
( 
SwaggerConfig ,
., -"
SetupSwaggerGenOptions- C
)C D
;D E
builder   
.   
Services   
.   
	AddScoped   
<   
ICategoryRepository   .
,  . /
CategoryRepository  0 B
>  B C
(  C D
)  D E
;  E F
builder!! 
.!! 
Services!! 
.!! 
	AddScoped!! 
<!! "
IProductItemRepository!! 1
,!!1 2!
ProductItemRepository!!3 H
>!!H I
(!!I J
)!!J K
;!!K L
builder"" 
."" 
Services"" 
."" 
AddSingleton"" 
<"" 
IEventBusRabbitMq"" /
>""/ 0
(""0 1
_""1 2
=>""3 5
EventBusConfig""6 D
.""D E%
ConfigureEventBusRabbitMq""E ^
(""^ _
builder""_ f
)""f g
)""g h
;""h i
builder## 
.## 
Services## 
.## 
	AddScoped## 
<## 
ICategoryService## +
,##+ ,
CategoryService##- <
>##< =
(##= >
)##> ?
;##? @
builder$$ 
.$$ 
Services$$ 
.$$ 
	AddScoped$$ 
<$$ 
IProductItemService$$ .
,$$. /
ProductItemService$$0 B
>$$B C
($$C D
)$$D E
;$$E F
builder%% 
.%% 
Services%% 
.%% 
AddHostedService%% !
<%%! "'
CustomInitializationService%%" =
>%%= >
(%%> ?
)%%? @
;%%@ A
builder&& 
.&& 
Services&& 
.&& 
AddSingleton&& 
<&& 
CatalogQuery&& *
>&&* +
(&&+ ,
)&&, -
;&&- .
builder'' 
.'' 
Services'' 
.'' 
AddSingleton'' 
<'' 
CatalogMutation'' -
>''- .
(''. /
)''/ 0
;''0 1
builder(( 
.(( 
Services(( 
.(( 
	AddScoped(( 
<(( 
CatalogSchema(( (
>((( )
((() *
)((* +
;((+ ,
builder)) 
.)) 
Logging)) 
.)) "
AddApplicationInsights)) &
())& '+
configureTelemetryConfiguration** '
:**' (
(**) *
config*** 0
)**0 1
=>**2 4
config++ 
.++ 
ConnectionString++ #
=++$ %
builder++& -
.++- .
Configuration++. ;
[++; <
$str++< b
]++b c
,++c d5
)configureApplicationInsightsLoggerOptions,, 5
:,,5 6
(,,7 8
options,,8 ?
),,? @
=>,,A C
{,,D E
},,F G
)-- 
;-- 
builder// 
.// 
Logging// 
.// 
	AddFilter// 
<// -
!ApplicationInsightsLoggerProvider// ;
>//; <
(//< =
$str//= Q
,//Q R
LogLevel//S [
.//[ \
Trace//\ a
)//a b
;//b c
builder33 
.33 
Services33 
.33 

AddGraphQL33 
(33 
b33 
=>33  
b33! "
.44 
	AddSchema44 

<44
 
CatalogSchema44 
>44 
(44 
)44 
.55 
AddSystemTextJson55 
(55 
)55 
.66 
AddGraphTypes66 
(66 
typeof66 
(66 
CatalogSchema66 #
)66# $
.66$ %
Assembly66% -
)66- .
)66. /
;66/ 0
var88 
app88 
=88 	
builder88
 
.88 
Build88 
(88 
)88 
;88 
if;; 
(;; 
app;; 
.;; 
Environment;; 
.;; 
IsDevelopment;; !
(;;! "
);;" #
);;# $
{<< 
app== 
.== 

UseSwagger== 
(== 
)== 
;== 
app>> 
.>> 
UseSwaggerUI>> 
(>> 
options>> 
=>>> 
SwaggerConfig>>  -
.>>- .!
SetupSwaggerUiOptions>>. C
(>>C D
options>>D K
,>>K L
app>>M P
)>>P Q
)>>Q R
;>>R S
}?? 
appBB 
.BB 
UseGraphQLGraphiQLBB 
(BB 
$strBB $
)BB$ %
;BB% &
appDD 
.DD 
UseAuthenticationDD 
(DD 
)DD 
;DD 
appEE 
.EE 
UseAuthorizationEE 
(EE 
)EE 
;EE 
appGG 
.GG 
MapControllersGG 
(GG 
)GG 
;GG 
appII 
.II 
RunII 
(II 
)II 	
;II	 
Ñ
V/Users/pavel/project/NetMentoring/CatalogWebApi/Service/CustomInitializationService.cs
	namespace 	
CatalogWebApi
 
. 
Service 
;  
public		 
class		 '
CustomInitializationService		 (
:		) *
IHostedService		+ 9
{

 
private 	
readonly
  
IServiceScopeFactory '
_scopeFactory( 5
;5 6
public '
CustomInitializationService	 $
($ % 
IServiceScopeFactory% 9
scopeFactory: F
)F G
{ 
_scopeFactory 
= 
scopeFactory  
;  !
} 
public 
async	 
Task 

StartAsync 
( 
CancellationToken 0
cancellationToken1 B
)B C
{ 
using 	
var
 
scope 
= 
_scopeFactory #
.# $
CreateScope$ /
(/ 0
)0 1
;1 2
await 	
using
 
var 
	dbContext 
= 
scope  %
.% &
ServiceProvider& 5
.5 6

GetService6 @
<@ A
CatalogDbContextA Q
>Q R
(R S
)S T
;T U
var 

categories 
= 
new 
List 
< 
Category &
>& '
{ 
new 	
Category
 
{ 
Id 
= 
$num 
, 
Name !
=" #
$str$ /
}0 1
,1 2
new   	
Category  
 
{   
Id   
=   
$num   
,   
Name   !
=  " #
$str  $ /
}  0 1
,  1 2
new!! 	
Category!!
 
{!! 
Id!! 
=!! 
$num!! 
,!! 
Name!! !
=!!" #
$str!!$ /
}!!0 1
}"" 
;"" 
await## 	
	dbContext##
 
?## 
.## 

Categories## 
.##  
AddRangeAsync##  -
(##- .

categories##. 8
)##8 9
;##9 :
await$$ 	
	dbContext$$
 
.$$ 
SaveChangesAsync$$ $
($$$ %
cancellationToken$$% 6
)$$6 7
;$$7 8
}%% 
public)) 
Task))	 
	StopAsync)) 
()) 
CancellationToken)) )
cancellationToken))* ;
))); <
{** 
return++ 

Task++ 
.++ 
CompletedTask++ 
;++ 
},, 
}-- 